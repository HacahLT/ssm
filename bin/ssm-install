#!/usr/bin/env node

var program = require('commander')
  , fs = require('fs')
  , path = require('path')
  , spawn = require('child_process').spawn
  , resolvePath = require('../lib/util').resolvePath
  , install = require('../lib/install')
  , validate = require('../lib/validate')
  , EventEmitter = require('events').EventEmitter;

program
  .option('-v, --verbose', 'verbose mode')
  .parse(process.argv);

var pathDpkg = (program.args[0]) ? resolvePath(program.args[0]): path.resolve('package.json')
  , dpkgRoot = path.dirname(pathDpkg);

try {
  var dpkg = JSON.parse(fs.readFileSync(pathDpkg));
} catch (e) {
  console.error('\033[91mFAIL\033[0m: ' + e.message);
  process.exit(1);
}

try {
  validate(dpkg, emitter);
} catch(e){
  console.error('\033[91mFAIL\033[0m: ' + e.message);
  process.exit(1);
}

//logging
var emitter = new EventEmitter();
if(program.verbose){
  emitter.on('log', function(msg){
    console.log(msg);
  });
  emitter.on('success', function(msg){
    console.log('\033[92mSUCCESS\033[0m: %s', msg);
  });
  emitter.on('logEol', function(msg){
    process.stdout.write(msg);
  });
}
emitter.on('error', function(msg){
  console.error('\033[91mFAIL\033[0m: ' + msg);
});
emitter.on('errorEol', function(msg){
  process.stderr.write('\033[91mFAIL\033[0m: ' + msg);
});

emitter.emit('log', 'Building the model locally...');

install(dpkgRoot, dpkg, path.join(dpkgRoot, 'bin'), emitter, function(err){
  if(err){
    console.error('\033[91mFAIL\033[0m: ' + err.message);
    process.exit(1);
  }
});
