{
  "$schema": "http://json-schema.org/draft-04/schema#",

  "definitions": {
  
    "data": {
      "type": "object",
      "properties": {
        "datapackage": {
	  "type": "string"	 
	},
	"resource": {
	  "type": "string"	 
	},
	"field": {
	  "type": "string"	 
	}
      },
      "required": ["resource"]
    },

    "time-series": {
      "type": "object",
      "properties": {
        "name": {
	  "type": "string"
	},
	"data": {
	  "type": "array",
	  "items": {"$ref": "#/definitions/data"},
	  "minItems": 2,
	  "maxItems": 2
	}
      }
    }

  },
	
  "type": "object",
  
  "properties": {
    "name": {
      "type": "string",
      "description": "The unique name of your package. This will also indicate the name of the package in the NPM global repository (if you choose to publish it). In SSM, this property will represent the name of your model."
    },

    "description": {
      "type": "string",
      "description": "The description of the project. Try to keep it short and concise."
    },

    "keywords": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "An array of keywords which describe your package. This is useful for users who search for packages on search.npmjs.org"
    },

    "datadependencies": {
      "type": "object",
      "patternProperties": {
        "": { "type": "string" }
      },
      "description": "A hash containing key/pair mappings of datapackages and versions. This is used to specify the dependencies for your model."
    },

    "licenses": {
      "type": "array",
      "items": {
        "type": "object"
      },
      "description": "The license which you prefer to release your model under."
    },

    "version": {
      "type": "string",
      "description": "Version of the package as specified by Semantic Versioning. It is important to keep track of your package version in a smart way. If you don't follow standard versioning techniques, it will be difficult for users to keep track of your model."
    },

    "model": {
      "type": "object",
      "description": "Description of your state space model. The current grammar allows you to express systems of ordinary or stochastic differential equations, as well as compartmental models and combinations thereof.",
      "properties": {

        "populations": {
	  "type": "array",
	  "description": "Grouping of the state variables comprised in your compartmental model. For each group, provide a name and the list of corresponding states. By adding an optional remainder field, you will ensure the population size remains positive.",
	  "items": {
	    "type": "object",
	    "properties": {
	      "name": {
	        "type": "string"
	      },
	      "composition": {
	        "type": "array",
	      	"items": {
	      	  "type": "string"
	    	}
	      },
	      "remainder": {
	        "type": "object",
		"description": "Following this instruction, the value of the remainder variable at every time will be determined by the size of the population minus the sum of the other compartments. Note that SSM will discard scenarios where this variable becomes negative.",
	    	"properties": {
	      	  "name": {
	            "type": "string"
	      	  },
	      	  "pop_size": {
	            "type": "string"
	      	  }
	    	},
	    	"required": ["name", "pop_size"]
	      }
	    },
	    "required": ["name", "composition"]		
      	  }  
	},

	"reactions": {
	  "type": "array",
	  "description": "Description of the dynamics of your compartmental model. We only consider density-dependent reactions: each rate will be multiplied by the size of the compartment individuals are leaving. See the tracked and white_noise optional fields for additional options.",
	  "items": {
	    "type": "object",
	    "properties": {
	      "from": {
	        "type": "string"
	      },
	      "to": {
	        "type": "string"
	      },
	      "rate": {
	        "type": "string"
	      },
	      "description": {
	        "type": "string"
	      },
	      "white_noise": {
	        "type": "object",
		"description": "In order to cope with the absence or mis-specification of environmental factors in the model, you can multiply the rate of each reaction by a white gamma noise. To correlate these noises, use the same name. For more information, see Breto et al. 2009, Time series analysis via mechanistic models.",
		"properties": {
		  "name": {
		    "type": "string"
		  },
		  "sd": {
		    "type": "string"
		  }
		},
		"required": ["name","sd"]
	      },
	      "tracked": {
	      	"type": "array",
		"description": "When your are monitoring or fitting the integrated flow of a given reaction, you can store it in one or several variables defined in this list. If a given flow variable is repeated in several reactions, it will correspond of the sum of the flows of these reactions.",
		"items": {
		  "type": "string"
		}
	      },
    	      "keywords": {
      	        "type": "array",
     	      	"items": {
       	          "type": "string"
	        }
	      }
    	    },
	    "required": ["from", "to","rate"]	
	  }
	},

	"observations": {
	  "type": "array",
	  "description": "Name each of the observed time series, determine when observations started to be collected and what is the distribution of the observation process.",
	  "items": {
	    "type": "object",
	    "properties": {
	      "name": {
	        "type": "string"
	      },
	      "start": {
	        "type": "string",
		"format": "date-time"
	      },
	      "distribution": {
	        "type": "string"
	      },
	      "mean": {
	        "type": "string"
	      },
	      "sd": {
	        "type": "string"
	      }
	    },
	    "required": ["name", "start","distribution","mean","sd"]
	  }
	},

	"data": {
	  "type": "array",
	  "description": "Link each of the observed variables to a data resource.",
	  "items": {
	    "type": "object",
	    "oneOf": [ 
   	      {"$ref": "#/definitions/time-series"}
	    ]
	  }
	},

	"inputs": {
	  "type": "array",
	  "description": "Link each of the parameters or covariates at stake in your model to a data resource.",
	  "items": {
	    "type": "object",
	    "anyOf": [ 
   	      {"$ref": "#/definitions/time-series"},
	      {
	        "type": "object",
		"properties": {
		  "name": {
		    "type": "string"
		  },
		  "description": {
		    "type": "string"
		  },
		  "data": {"$ref": "#/definitions/data"},
		  "transformation": {
		    "description": "When the parameters used in the model are functions of the data resources, specify the relation here.",
		    "type": "string"
		  },
		  "to-resource": {
		    "description": "In order to make predictions after fitting your data, specify how to invert the transformation relation at a later time than t0.",
		    "type": "string"
		  }
		},
		"required": ["name"]
	      }
	    ]
	  }
        }	
      },

      "resource": {
      "type": "array",
      "description": "Shareable data resources, corresponding to parameter values, ranges, prior distributions or time series used to inform your model.",
      "items": {
        "type": "object",
	"properties": {
	  "name": { "type": "string" },
	  "description": { "type": "string" },
	  "data": {
	    "type": "object",
	    "anyOf": [
	      {     
	        "type": "object",
		"properties": {
		  "distribution": { "type": "string",  "enum": ["fixed"] },
		  "value": { "type": "number" },
		  "unit": { "type": "string" }
		},
		"required": ["distribution", "value"]
	      },
	      {     
	        "type": "object",
		"properties": {
		  "distribution": { "type": "string",  "enum": ["uniform"] },
		  "lower": { "type": "number" },
		  "upper": { "type": "number" },
		  "unit": { "type": "string" }
		},
		"required": ["distribution", "lower", "upper"]
	      },
	      {     
	        "type": "object",
		"properties": {
		  "distribution": { "type": "string",  "enum": ["normal"] },
		  "mean": { "type": "number" },
		  "sd": { "type": "number" },
		  "lower": { "type": "number" },
		  "upper": { "type": "number" },
		  "unit": { "type": "string" }
		},
		"required": ["distribution", "mean", "sd"]
	      },
	      {
	        "type": "object",
		"patternProperties": {
        	  "": { "type": "number" }
      		}
	      },
	      {
	        "type": "object",
		"patternProperties": {
        	  "": { 
		    "type": "object",
		    "patternProperties": {
        	      "": { "type": "number" }
      		    }
		  }
      		}
	      }	       
	    ]
	  }	    
	}
      }
     }
   }    
 },
 "required":["name"]
}





